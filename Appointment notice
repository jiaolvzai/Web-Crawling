import requests
from bs4 import BeautifulSoup
import smtplib
from email.mime.text import MIMEText
from email.utils import formataddr
import datetime
import time
import random
import re


#define input info
today = datetime.date.today()
url = 'https://columbia.mywconline.net/schedule.php?date=' + str(today.month) + "-" + str(today.day) + "-" + str(today.year) + '&scheduleid=xxx'
cookies = {'PHPSESSID': 'xxx'}
my_sender = 'abc@qq.com'
my_pass = 'password'
my_user = 'edf@gmail.com'

# change User-Agent
def getHeaders():
    user_agent_list = [
        'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.77 Safari/537.36',
        'Mozilla/5.0(Windows;U;WindowsNT6.1;en-us)AppleWebKit/534.50(KHTML,likeGecko)Version/5.1Safari/534.50',
        'Mozilla/5.0(WindowsNT6.1;rv:2.0.1)Gecko/20100101Firefox/4.0.1',
        'Mozilla/4.0(compatible;MSIE7.0;WindowsNT5.1;Trident/4.0;SE2.XMetaSr1.0;SE2.XMetaSr1.0;.NETCLR2.0.50727;SE2.XMetaSr1.0)'
    ]
    index = random.randrange(0,len(user_agent_list))
    headers = {
        'User-Agent': user_agent_list[index]
    }
    return headers



def getHtml(url,cookies):
    try:
        page = requests.get(url = url, cookies = cookies, headers = getHeaders())
        if page.status_code == 200:
            return page.content
    except Exception:
            print("===request exception==")
            return None



def parse_html(html):
    try:
        soup = BeautifulSoup(html, "lxml")
        spot = soup.findAll(onclick = re.compile("^window.open"))
        return spot
    except Exception:
        print("===parseHtml exception===")
        return None


def mail():
    ret = True
    try:
        msg = MIMEText('writing center updated', 'plain', 'utf-8')
        msg['From'] = formataddr(["WYW_QQ", my_sender])
        msg['To'] = formataddr(["WYW_GMAIL", my_user])
        msg['Subject'] = "writing center updated"

        server = smtplib.SMTP_SSL("smtp.qq.com", 465)
        server.login(my_sender, my_pass)
        server.sendmail(my_sender, [my_user, ], msg.as_string())
        server.quit()
    except Exception:
        ret = False
    return ret


def main(sched_timer):
    html = getHtml(url,cookies)
    spot = parse_html(html)
    print(spot)
    if spot != []:
        ret = mail()
        if ret:
            print("mail sent")
        else:
            print("sent failed")
    else:
        pass



if __name__ == '__main__':
    # set flag time revised after task completed
    flag = 0
    # acquire current time
    now = datetime.datetime.now()
    # start tiee = current time + 5s
    sched_timer = datetime.datetime(now.year, now.month, now.day, now.hour, now.minute,
                                    now.second) + datetime.timedelta(seconds=5)
    # manual instead
    # sched_timer = datetime.datetime(2017,12,13,9,30,10)
    while (True):
        # current time
        now = datetime.datetime.now()
        # print(type(now))
        # 1s different allowed
        if sched_timer < now < sched_timer + datetime.timedelta(seconds=1):
            time.sleep(1)
            print(now)
            # run
            main(sched_timer)
            # set flag to 1
            flag = 1
        else:
            # control flag - task time revised after main executed
            if flag == 1:
                # revise task time - gap 2min
                sched_timer = sched_timer + datetime.timedelta(minutes=1)
                flag = 0


